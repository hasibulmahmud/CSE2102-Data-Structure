
#include <bits/stdc++.h>
using namespace std;

class Node {
public:
    int data;
    Node* next;
    Node(int n) {
        data = n;
        next = NULL;
    }
};

class Stack {
    Node* head = nullptr; 
    int count = 0;       
public:
    void push(int n) {
        Node* temp = new Node(n);
        temp->next = head;
        head = temp;
        count++;
    }

    int peek() {
        if (head == nullptr) {
            cout << "Stack is empty!" << endl;
            return -1;
        }
        return head->data;
    }

    void pop() {
        if (head == nullptr) {
            cout << "Stack Underflow!" << endl;
            return;
        }
        Node* temp = head;
        head = head->next;
        delete temp;
        count--;
    }

    bool isEmpty() {
        return head == nullptr;
    }

    int size() {
        return count;
    }

    void display() {
        if (head == nullptr) {
            cout << "Stack is empty!" << endl;
            return;
        }
        Node* temp = head;
        while (temp) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    Stack st;
    st.push(5);
    st.push(15);
    st.push(25);

    st.display(); 

    cout << "Top: " << st.peek() << endl; 
    st.pop();
    st.display(); 

    cout << "Size: " << st.size() << endl; 
    cout << "Is Empty: " << st.isEmpty() << endl; 
}
